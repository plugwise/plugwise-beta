# For pre-commit.ci
ci:
  # Defer autoupdate to quarterly (there is no 'off' button) to have renovate pick up first
  autoupdate_schedule: quarterly
  skip: [test-core-prep, test-pip-prep, testing, quality]
  submodules: true

default_language_version:
  # force all unspecified python hooks to run python3
  python: python3.11

repos:
  # Run manually in CI skipping the branch checks
  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: "Verifying/updating code using isort"
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-executables-have-shebangs
        stages: [manual]
      - id: no-commit-to-branch
        name: "Verifying git branch exists"
        args:
          - --branch=main
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.2
    hooks:
      - id: pyupgrade
        name: "Checking pyupgrade"
        args: [--py39-plus]
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        name: "Verifying/updating code using black"
        args:
          - --safe
          - --quiet
        files: ^((custom_components|tests)/.+)?[^/]+\.py$
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.4
    hooks:
      - id: codespell
        name: "Verifying/updating code for spelling issues"
        args:
          - --ignore-words-list=hass,alot,datas,dof,dur,ether,farenheit,hist,iff,iif,ines,ist,lightsensor,mut,nd,pres,referer,rime,ser,serie,te,technik,ue,uint,visability,wan,wanna,withing,iam,incomfort,ba,haa,pullrequests
          - --skip="./.*,*.csv,*.json"
          - --quiet-level=2
        exclude_types: [csv, json]
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: "Linting with bandit"
        args:
          - --quiet
          - --format=custom
          - --configfile=tests/bandit.yaml
        files: ^(custom_components|tests)/.+\.py$
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.31.0
    hooks:
      - id: yamllint
        name: "Linting yaml"
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0-alpha.9-for-vscode
    hooks:
      - id: prettier
        name: "Verifying/updating code with prettier"
  - repo: https://github.com/cdce8p/python-typing-update
    rev: v0.5.1
    hooks:
      # Run `python-typing-update` hook manually from time to time
      # to update python typing syntax.
      # Will require manual work, before submitting changes!
      - id: python-typing-update
        name: "Verifying code for typing-update"
        stages: [manual]
        args:
          - --py39-plus
          - --force
          - --keep-updates
        files: ^(custom_components|tests)/.+\.py$
  - repo: local
    hooks:
      - id: test-core-prep
        # yamllint disable-line rule:line-length
        name: "Home Assistant Core Testing - Cloning/updating HA core#dev - patience!"
        # yamllint disable-line rule:line-length
        entry: /usr/bin/env bash -c 'exec env GITHUB_ACTIONS="1" scripts/core-testing.sh core_prep'
        language: script
        pass_filenames: false
      - id: test-pip-prep
        # yamllint disable-line rule:line-length
        name: "Home Assistant Core Testing - Installing dependencies - patience!"
        # yamllint disable-line rule:line-length
        entry: /usr/bin/env bash -c 'exec env GITHUB_ACTIONS="1" scripts/core-testing.sh pip_prep'
        language: script
        pass_filenames: false
      - id: testing
        # yamllint disable-line rule:line-length
        name: "Home Assistant Core Testing - Performing Tests"
        # yamllint disable-line rule:line-length
        entry: /usr/bin/env bash -c 'exec env GITHUB_ACTIONS="1" scripts/core-testing.sh testing'
        language: script
        pass_filenames: false
      - id: quality
        # yamllint disable-line rule:line-length
        name: "Home Assistant Core Testing - Quality checks - might need patience"
        # yamllint disable-line rule:line-length
        entry: /usr/bin/env bash -c 'exec env GITHUB_ACTIONS="1" scripts/core-testing.sh quality'
        language: script
        pass_filenames: false
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.34.0
    hooks:
      - id: markdownlint
        name: "Linting Markdown"
