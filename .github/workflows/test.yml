# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test with HA-core

env:
  CACHE_VERSION: 3
  DEFAULT_PYTHON: 3.9

on:
  workflow_dispatch:
  push:
#  schedule:
#    - cron: '0 0 * * 0' # weekly
# pull_request:

jobs:
  # Prepare default python version environment
  ha-core-prepare:
    runs-on: ubuntu-latest
    name: Setup for HA-core
    steps:
    - name: Check out committed code
      uses: actions/checkout@v3
    - name: Set up Python ${{ env.DEFAULT_PYTHON }}
      id: python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.DEFAULT_PYTHON }}
    - name: Restore base HA-core Python ${{ env.DEFAULT_PYTHON }} virtual environment
      id: cache-hacore
      uses: actions/cache@v3
      env:
        cache-name: cache-hacore
      with:
        path: ~/ha-core
        key: >-
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{
          steps.python.outputs.python-version }}-${{
          hashFiles('custom_components/plugwise/manifest.json') }}-${{
          hashFiles('~/ha-core/.git/plugwise-tracking') }}
        restore-keys: |
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{ steps.python.outputs.python-version }}-
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore
          ${{ env.CACHE_VERSION}}-${{ runner.os }}
          ${{ env.CACHE_VERSION}}
    # Workaround, even though cache restored on new(er) PR
    # cache-hit isn't registered (although cache is restored
    - name: Create HA-core Python virtual environment
      run: |
        if [ -f ~/ha-core/requirements_test_all.txt ]; then
            cd ~/ha-core
            git config pull.rebase true
            git reset --hard
            git pull
        else
            git clone https://github.com/home-assistant/core.git ~/ha-core
            cd ~/ha-core
            git config pull.rebase true
            git checkout dev
            script/setup
            . venv/bin/activate
            pip install -q -r requirements_test.txt
        fi
        git log -1 | head -1 > ~/ha-core/.git/plugwise-tracking


  # Reset GIT, preload and execute tests
  ha-core-test:
    runs-on: ubuntu-latest
    name: Test against HA-core
    needs: ha-core-prepare
    steps:
    - name: Check out committed code
      uses: actions/checkout@v3
    - name: Set up Python ${{ env.DEFAULT_PYTHON }}
      id: python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.DEFAULT_PYTHON }}
    - name: Restore base HA-core Python ${{ env.DEFAULT_PYTHON }} virtual environment
      id: cache-hacore
      uses: actions/cache@v3
      env:
        cache-name: cache-hacore
      with:
        path: ~/ha-core
        key: >-
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{
          steps.python.outputs.python-version }}-${{
          hashFiles('custom_components/plugwise/manifest.json') }}-${{
          hashFiles('~/ha-core/.git/plugwise-tracking') }}
        restore-keys: |
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{ steps.python.outputs.python-version }}-
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore
          ${{ env.CACHE_VERSION}}-${{ runner.os }}
          ${{ env.CACHE_VERSION}}
    - name: Fail job if Python cache restore failed
      if: steps.cache-hacore.outputs.cache-hit != 'true'
      run: |
        echo "Failed to restore Python ${{ env.DEFAULT_PYTHON }} virtual environment from cache"
        exit 1
    - name: Show last commit message
      run: |
        echo "Last commit message:"
        git log -1 --pretty=%B
    - name: Remove current code and tests
      run: |
        cd ~/ha-core
        rm -r homeassistant/components/plugwise tests/components/plugwise
    - name: Copy code and tests
      run: |
        cp -r custom_components/plugwise ~/ha-core/homeassistant/components/
        cp -r tests/components/plugwise ~/ha-core/tests/components/
    - name: Prepare requirements (be)for(e) plugwise
      run: |
        cd ~/ha-core
        . venv/bin/activate
        mkdir ~/tmp
        pip install -q -r requirements_test.txt -r requirements.txt
        egrep -i "voluptuous|aiohttp_cors|pyroute2|sqlalchemy|zeroconf|pyserial|pytest-socket" requirements_test_all.txt > ~/tmp/requirements_test_extra.txt
        pip install -q -r ~/tmp/requirements_test_extra.txt
        pip install -q $(grep require ~/work/plugwise-beta/plugwise-beta/custom_components/plugwise/manifest.json | cut -f 4 -d '"')
        pip list | grep plugwise
    - name: Run tests
      run: |
        cd ~/ha-core
        . venv/bin/activate
        pytest -- tests/components/plugwise/
    - name: Show coverage
      run: |
        cd ~/ha-core
        . venv/bin/activate
        pytest --cov=homeassistant/components/plugwise/ --cov-report term-missing -- tests/components/plugwise/

  # Reset GIT, preload and validate code
  ha-core-quality:
    runs-on: ubuntu-latest
    name: Verify code quality
    needs: ha-core-test
    steps:
    - name: Check out committed code
      uses: actions/checkout@v3
    - name: Set up Python ${{ env.DEFAULT_PYTHON }}
      id: python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.DEFAULT_PYTHON }}
    - name: Restore base HA-core Python ${{ env.DEFAULT_PYTHON }} virtual environment
      id: cache-hacore
      uses: actions/cache@v3
      env:
        cache-name: cache-hacore
      with:
        path: ~/ha-core
        key: >-
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{
          steps.python.outputs.python-version }}-${{
          hashFiles('custom_components/plugwise/manifest.json') }}-${{
          hashFiles('~/ha-core/.git/plugwise-tracking') }}
        restore-keys: |
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore-${{ steps.python.outputs.python-version }}-
          ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-hacore
          ${{ env.CACHE_VERSION}}-${{ runner.os }}
          ${{ env.CACHE_VERSION}}
    - name: Fail job if Python cache restore failed
      if: steps.cache-hacore.outputs.cache-hit != 'true'
      run: |
        echo "Failed to restore Python ${{ env.DEFAULT_PYTHON }} virtual environment from cache"
        exit 1
    - name: Show last commit message
      run: |
        echo "Last commit message:"
        git log -1 --pretty=%B
    - name: Remove current code and tests
      run: |
        cd ~/ha-core
        rm -r homeassistant/components/plugwise tests/components/plugwise
    - name: Copy code and tests
      run: |
        cp -r custom_components/plugwise ~/ha-core/homeassistant/components/
        cp -r tests/components/plugwise ~/ha-core/tests/components/
    - name: Prepare requirements (be)for(e) plugwise
      run: |
        cd ~/ha-core
        . venv/bin/activate
        mkdir ~/tmp
        egrep -i "sqlalchemy|zeroconf|pyserial" requirements_test_all.txt > ~/tmp/requirements_test_extra.txt
        pip install -r ~/tmp/requirements_test_extra.txt
        pip install $(grep require ~/work/plugwise-beta/plugwise-beta/custom_components/plugwise/manifest.json | cut -f 4 -d '"')
    - name: flake8
      run: |
        cd ~/ha-core
        . venv/bin/activate
        pip install flake8
        flake8 homeassistant/components/plugwise/*py
        flake8 tests/components/plugwise/*py
    - name: pylint
      run: |
        cd ~/ha-core
        . venv/bin/activate
        pip install pylint
        pylint homeassistant/components/plugwise/*py
        # disable for further figuring out, apparently HA doesn't pylint against test
        #pylint tests/components/plugwise/*py
    - name: hassfest-lite
      run: |
        echo ""
        echo "Hassfest-lite (i.e. core-compatible and ignoring test-pypi and github URIs)"
        echo ""
        cd ~/ha-core
        . venv/bin/activate
        echo "Removing version from manifest for hassfest-ing (no version in core components)"
        echo ""
        sed -i "/version.:/d" ./homeassistant/components/plugwise/manifest.json
        grep -q -E "require.*http.*test-files.pythonhosted.*#" ./homeassistant/components/plugwise/manifest.json && (
          echo "Changing requirement for hassfest pass .... :("
          sed -i "s/http.*test-files.pythonhosted.*#//g" ./homeassistant/components/plugwise/manifest.json
        )
        echo "Running hassfest (plugwise-only)"
        echo ""
        python3 -m script.hassfest --integration-path homeassistant/components/plugwise

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
